/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardAuthImport } from './routes/dashboard/_auth'
import { Route as DashboardAuthIndexImport } from './routes/dashboard/_auth.index'
import { Route as DashboardAuthWalletImport } from './routes/dashboard/_auth.wallet'
import { Route as DashboardAuthTicketsImport } from './routes/dashboard/_auth.tickets'
import { Route as DashboardAuthSubscriptionImport } from './routes/dashboard/_auth.subscription'
import { Route as DashboardAuthPaymentsImport } from './routes/dashboard/_auth.payments'
import { Route as DashboardAuthEditInfoImport } from './routes/dashboard/_auth.editInfo'
import { Route as DashboardAuthCommentsImport } from './routes/dashboard/_auth.comments'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()
const SupportLazyImport = createFileRoute('/support')()
const SubscriptionLazyImport = createFileRoute('/subscription')()
const ShowsLazyImport = createFileRoute('/shows')()
const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const ForgetPasswordLazyImport = createFileRoute('/forget-password')()
const IndexLazyImport = createFileRoute('/')()
const MoviesIndexLazyImport = createFileRoute('/movies/')()
const MoviesMovieIdLazyImport = createFileRoute('/movies/$movieId')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const SupportLazyRoute = SupportLazyImport.update({
  path: '/support',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/support.lazy').then((d) => d.Route))

const SubscriptionLazyRoute = SubscriptionLazyImport.update({
  path: '/subscription',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/subscription.lazy').then((d) => d.Route))

const ShowsLazyRoute = ShowsLazyImport.update({
  path: '/shows',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/shows.lazy').then((d) => d.Route))

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ForgetPasswordLazyRoute = ForgetPasswordLazyImport.update({
  path: '/forget-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/forget-password.lazy').then((d) => d.Route),
)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MoviesIndexLazyRoute = MoviesIndexLazyImport.update({
  path: '/movies/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/movies/index.lazy').then((d) => d.Route))

const MoviesMovieIdLazyRoute = MoviesMovieIdLazyImport.update({
  path: '/movies/$movieId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/movies/$movieId.lazy').then((d) => d.Route),
)

const DashboardAuthRoute = DashboardAuthImport.update({
  id: '/_auth',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAuthIndexRoute = DashboardAuthIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardAuthRoute,
} as any)

const DashboardAuthWalletRoute = DashboardAuthWalletImport.update({
  path: '/wallet',
  getParentRoute: () => DashboardAuthRoute,
} as any)

const DashboardAuthTicketsRoute = DashboardAuthTicketsImport.update({
  path: '/tickets',
  getParentRoute: () => DashboardAuthRoute,
} as any)

const DashboardAuthSubscriptionRoute = DashboardAuthSubscriptionImport.update({
  path: '/subscription',
  getParentRoute: () => DashboardAuthRoute,
} as any)

const DashboardAuthPaymentsRoute = DashboardAuthPaymentsImport.update({
  path: '/payments',
  getParentRoute: () => DashboardAuthRoute,
} as any)

const DashboardAuthEditInfoRoute = DashboardAuthEditInfoImport.update({
  path: '/editInfo',
  getParentRoute: () => DashboardAuthRoute,
} as any)

const DashboardAuthCommentsRoute = DashboardAuthCommentsImport.update({
  path: '/comments',
  getParentRoute: () => DashboardAuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/forget-password': {
      id: '/forget-password'
      path: '/forget-password'
      fullPath: '/forget-password'
      preLoaderRoute: typeof ForgetPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/shows': {
      id: '/shows'
      path: '/shows'
      fullPath: '/shows'
      preLoaderRoute: typeof ShowsLazyImport
      parentRoute: typeof rootRoute
    }
    '/subscription': {
      id: '/subscription'
      path: '/subscription'
      fullPath: '/subscription'
      preLoaderRoute: typeof SubscriptionLazyImport
      parentRoute: typeof rootRoute
    }
    '/support': {
      id: '/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_auth': {
      id: '/dashboard/_auth'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardAuthImport
      parentRoute: typeof DashboardRoute
    }
    '/movies/$movieId': {
      id: '/movies/$movieId'
      path: '/movies/$movieId'
      fullPath: '/movies/$movieId'
      preLoaderRoute: typeof MoviesMovieIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/movies/': {
      id: '/movies/'
      path: '/movies/'
      fullPath: '/movies/'
      preLoaderRoute: typeof MoviesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_auth/comments': {
      id: '/dashboard/_auth/comments'
      path: '/comments'
      fullPath: '/dashboard/comments'
      preLoaderRoute: typeof DashboardAuthCommentsImport
      parentRoute: typeof DashboardAuthImport
    }
    '/dashboard/_auth/editInfo': {
      id: '/dashboard/_auth/editInfo'
      path: '/editInfo'
      fullPath: '/dashboard/editInfo'
      preLoaderRoute: typeof DashboardAuthEditInfoImport
      parentRoute: typeof DashboardAuthImport
    }
    '/dashboard/_auth/payments': {
      id: '/dashboard/_auth/payments'
      path: '/payments'
      fullPath: '/dashboard/payments'
      preLoaderRoute: typeof DashboardAuthPaymentsImport
      parentRoute: typeof DashboardAuthImport
    }
    '/dashboard/_auth/subscription': {
      id: '/dashboard/_auth/subscription'
      path: '/subscription'
      fullPath: '/dashboard/subscription'
      preLoaderRoute: typeof DashboardAuthSubscriptionImport
      parentRoute: typeof DashboardAuthImport
    }
    '/dashboard/_auth/tickets': {
      id: '/dashboard/_auth/tickets'
      path: '/tickets'
      fullPath: '/dashboard/tickets'
      preLoaderRoute: typeof DashboardAuthTicketsImport
      parentRoute: typeof DashboardAuthImport
    }
    '/dashboard/_auth/wallet': {
      id: '/dashboard/_auth/wallet'
      path: '/wallet'
      fullPath: '/dashboard/wallet'
      preLoaderRoute: typeof DashboardAuthWalletImport
      parentRoute: typeof DashboardAuthImport
    }
    '/dashboard/_auth/': {
      id: '/dashboard/_auth/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardAuthIndexImport
      parentRoute: typeof DashboardAuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ForgetPasswordLazyRoute,
  LoginLazyRoute,
  RegisterLazyRoute,
  ShowsLazyRoute,
  SubscriptionLazyRoute,
  SupportLazyRoute,
  DashboardRoute: DashboardRoute.addChildren({
    DashboardAuthRoute: DashboardAuthRoute.addChildren({
      DashboardAuthCommentsRoute,
      DashboardAuthEditInfoRoute,
      DashboardAuthPaymentsRoute,
      DashboardAuthSubscriptionRoute,
      DashboardAuthTicketsRoute,
      DashboardAuthWalletRoute,
      DashboardAuthIndexRoute,
    }),
  }),
  MoviesMovieIdLazyRoute,
  MoviesIndexLazyRoute,
})

/* prettier-ignore-end */
