/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SupportLazyImport = createFileRoute('/support')()
const SubscriptionLazyImport = createFileRoute('/subscription')()
const MoviesShowsLazyImport = createFileRoute('/movies-shows')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SupportLazyRoute = SupportLazyImport.update({
  path: '/support',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/support.lazy').then((d) => d.Route))

const SubscriptionLazyRoute = SubscriptionLazyImport.update({
  path: '/subscription',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/subscription.lazy').then((d) => d.Route))

const MoviesShowsLazyRoute = MoviesShowsLazyImport.update({
  path: '/movies-shows',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/movies-shows.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/movies-shows': {
      id: '/movies-shows'
      path: '/movies-shows'
      fullPath: '/movies-shows'
      preLoaderRoute: typeof MoviesShowsLazyImport
      parentRoute: typeof rootRoute
    }
    '/subscription': {
      id: '/subscription'
      path: '/subscription'
      fullPath: '/subscription'
      preLoaderRoute: typeof SubscriptionLazyImport
      parentRoute: typeof rootRoute
    }
    '/support': {
      id: '/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  MoviesShowsLazyRoute,
  SubscriptionLazyRoute,
  SupportLazyRoute,
})

/* prettier-ignore-end */
