/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SupportLazyImport = createFileRoute('/support')()
const SubscriptionLazyImport = createFileRoute('/subscription')()
const ShowsLazyImport = createFileRoute('/shows')()
const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const ForgetPasswordLazyImport = createFileRoute('/forget-password')()
const IndexLazyImport = createFileRoute('/')()
const MoviesIndexLazyImport = createFileRoute('/movies/')()
const DashboardIndexLazyImport = createFileRoute('/dashboard/')()
const MoviesMovieIdLazyImport = createFileRoute('/movies/$movieId')()
const DashboardWalletLazyImport = createFileRoute('/dashboard/wallet')()
const DashboardTicketsLazyImport = createFileRoute('/dashboard/tickets')()
const DashboardSubscriptionLazyImport = createFileRoute(
  '/dashboard/subscription',
)()
const DashboardPaymentsLazyImport = createFileRoute('/dashboard/payments')()
const DashboardEditInfoLazyImport = createFileRoute('/dashboard/editInfo')()
const DashboardCommentsLazyImport = createFileRoute('/dashboard/comments')()

// Create/Update Routes

const SupportLazyRoute = SupportLazyImport.update({
  path: '/support',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/support.lazy').then((d) => d.Route))

const SubscriptionLazyRoute = SubscriptionLazyImport.update({
  path: '/subscription',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/subscription.lazy').then((d) => d.Route))

const ShowsLazyRoute = ShowsLazyImport.update({
  path: '/shows',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/shows.lazy').then((d) => d.Route))

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ForgetPasswordLazyRoute = ForgetPasswordLazyImport.update({
  path: '/forget-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/forget-password.lazy').then((d) => d.Route),
)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MoviesIndexLazyRoute = MoviesIndexLazyImport.update({
  path: '/movies/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/movies/index.lazy').then((d) => d.Route))

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/index.lazy').then((d) => d.Route),
)

const MoviesMovieIdLazyRoute = MoviesMovieIdLazyImport.update({
  path: '/movies/$movieId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/movies/$movieId.lazy').then((d) => d.Route),
)

const DashboardWalletLazyRoute = DashboardWalletLazyImport.update({
  path: '/dashboard/wallet',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/wallet.lazy').then((d) => d.Route),
)

const DashboardTicketsLazyRoute = DashboardTicketsLazyImport.update({
  path: '/dashboard/tickets',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/tickets.lazy').then((d) => d.Route),
)

const DashboardSubscriptionLazyRoute = DashboardSubscriptionLazyImport.update({
  path: '/dashboard/subscription',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/subscription.lazy').then((d) => d.Route),
)

const DashboardPaymentsLazyRoute = DashboardPaymentsLazyImport.update({
  path: '/dashboard/payments',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/payments.lazy').then((d) => d.Route),
)

const DashboardEditInfoLazyRoute = DashboardEditInfoLazyImport.update({
  path: '/dashboard/editInfo',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/editInfo.lazy').then((d) => d.Route),
)

const DashboardCommentsLazyRoute = DashboardCommentsLazyImport.update({
  path: '/dashboard/comments',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/comments.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/forget-password': {
      id: '/forget-password'
      path: '/forget-password'
      fullPath: '/forget-password'
      preLoaderRoute: typeof ForgetPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/shows': {
      id: '/shows'
      path: '/shows'
      fullPath: '/shows'
      preLoaderRoute: typeof ShowsLazyImport
      parentRoute: typeof rootRoute
    }
    '/subscription': {
      id: '/subscription'
      path: '/subscription'
      fullPath: '/subscription'
      preLoaderRoute: typeof SubscriptionLazyImport
      parentRoute: typeof rootRoute
    }
    '/support': {
      id: '/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/comments': {
      id: '/dashboard/comments'
      path: '/dashboard/comments'
      fullPath: '/dashboard/comments'
      preLoaderRoute: typeof DashboardCommentsLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/editInfo': {
      id: '/dashboard/editInfo'
      path: '/dashboard/editInfo'
      fullPath: '/dashboard/editInfo'
      preLoaderRoute: typeof DashboardEditInfoLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/payments': {
      id: '/dashboard/payments'
      path: '/dashboard/payments'
      fullPath: '/dashboard/payments'
      preLoaderRoute: typeof DashboardPaymentsLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/subscription': {
      id: '/dashboard/subscription'
      path: '/dashboard/subscription'
      fullPath: '/dashboard/subscription'
      preLoaderRoute: typeof DashboardSubscriptionLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/tickets': {
      id: '/dashboard/tickets'
      path: '/dashboard/tickets'
      fullPath: '/dashboard/tickets'
      preLoaderRoute: typeof DashboardTicketsLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/wallet': {
      id: '/dashboard/wallet'
      path: '/dashboard/wallet'
      fullPath: '/dashboard/wallet'
      preLoaderRoute: typeof DashboardWalletLazyImport
      parentRoute: typeof rootRoute
    }
    '/movies/$movieId': {
      id: '/movies/$movieId'
      path: '/movies/$movieId'
      fullPath: '/movies/$movieId'
      preLoaderRoute: typeof MoviesMovieIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/movies/': {
      id: '/movies/'
      path: '/movies/'
      fullPath: '/movies/'
      preLoaderRoute: typeof MoviesIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ForgetPasswordLazyRoute,
  LoginLazyRoute,
  RegisterLazyRoute,
  ShowsLazyRoute,
  SubscriptionLazyRoute,
  SupportLazyRoute,
  DashboardCommentsLazyRoute,
  DashboardEditInfoLazyRoute,
  DashboardPaymentsLazyRoute,
  DashboardSubscriptionLazyRoute,
  DashboardTicketsLazyRoute,
  DashboardWalletLazyRoute,
  MoviesMovieIdLazyRoute,
  DashboardIndexLazyRoute,
  MoviesIndexLazyRoute,
})

/* prettier-ignore-end */
